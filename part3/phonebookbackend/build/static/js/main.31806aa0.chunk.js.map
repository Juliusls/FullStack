{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/getPersons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","addName","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","onChange","type","Persons","searchResults","handleDelete","map","person","key","name","number","onClick","id","Filter","searchValue","handleSearchValue","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","messageType","className","App","useState","persons","setPersons","setSearchValue","React","setSearchResults","setNewName","setNewNumber","notificationMessage","setNotificationMessage","setMessageType","useEffect","getPersons","initialPersons","results","filter","toLowerCase","includes","e","target","preventDefault","newPerson","personToUpdate","find","p","updatedPerson","some","window","confirm","returnedPerson","setTimeout","concat","catch","error","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31806aa0.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonForm = ({addName, handleNameChange, handleNumberChange, newName, newNumber}) => {\n\n    return (\n            <form onSubmit={addName}>\n                <div>\n                    name: <input value={newName}\n                                 onChange={handleNameChange}/>\n                </div>\n                <div>\n                    number: <input value={newNumber}\n                                   onChange={handleNumberChange}/>\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n    );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({searchResults, handleDelete}) => {\n    return (\n        <ul>\n            {searchResults.map(person => <li key={person.name}>{person.name} {person.number} <button onClick={() => handleDelete(person.id, person.name)}>delete</button></li>)}\n        </ul>\n    );\n};\n\n\nexport default Persons;\n","import React from 'react';\n\nconst Filter = ({searchValue, handleSearchValue}) => {\n    return (\n        <div>\n            filter shown with <input value={searchValue}\n                                     onChange={handleSearchValue}/>\n        </div>\n    );\n};\n\nexport default Filter;\n","import axios from 'axios'\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data)\n};\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data)\n};\n\nconst deletePerson = id => {\n    return  axios.delete(`${baseUrl}/${id}`);\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data)\n};\n\nexport default { getAll, create, deletePerson, update };\n","import React from \"react\";\n\nconst Notification = ({ message, messageType }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={messageType}>\n            {message}\n        </div>\n    )\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport getPersons from \"./services/getPersons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    const [searchResults, setSearchResults] = React.useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [notificationMessage, setNotificationMessage] = useState(null);\n    const [messageType, setMessageType] = useState('');\n\n\n    useEffect(() => {\n        getPersons\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, []);\n\n    useEffect(() => {\n        const results = persons.filter(person =>\n            person.name.toLowerCase().includes(searchValue)\n        );\n        setSearchResults(results);\n    }, [persons, searchValue]\n    );\n\n    const handleSearchValue = (e) => {\n        setSearchValue(e.target.value);\n    };\n\n    const handleNameChange = (e) => {\n        setNewName(e.target.value);\n    };\n    const handleNumberChange = (e) => {\n        setNewNumber(e.target.value);\n    };\n\n    const handleDelete = (id, name) => {\n        if (window.confirm(`Delete ${name} ?`)) {\n            getPersons\n                .deletePerson(id)\n                .catch((error) => {\n                    setMessageType('error');\n                    setNotificationMessage(\n                        `Information of ${name} has already been removed from the server`\n                    );\n                    setTimeout(() => {\n                        setNotificationMessage(null);\n                        setMessageType('');\n                    }, 5000);\n                });\n            setPersons(persons.filter(p => p.id !== id))\n        }\n    };\n\n    const addName = (e) => {\n        e.preventDefault();\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        };\n\n        const personToUpdate = persons.find(p => p.name === newPerson.name);\n        const updatedPerson = { ...personToUpdate, number: newNumber };\n\n        persons.some(person => person.name === newPerson.name)\n            ? (window.confirm(`${newPerson.name} is already added to the phone book, replace the old number with the new one?`))\n            && getPersons\n                .update(personToUpdate.id, updatedPerson)\n                .then(returnedPerson =>\n                    setPersons(persons.map(person =>\n                        person.id !== personToUpdate.id ? person : returnedPerson)))\n                .then(() => {\n                    setMessageType('success');\n                    setNotificationMessage(\n                        `Updated ${updatedPerson.name}`\n                    );\n                    setTimeout(() => {\n                        setMessageType('');\n                        setNotificationMessage(null)\n                    }, 5000);\n                })\n            : getPersons\n                .create(newPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                })\n                .then(() => {\n                    setMessageType('success');\n                    setNotificationMessage(\n                        `Added ${newPerson.name}`\n                    );\n                    setTimeout(() => {\n                        setMessageType('');\n                        setNotificationMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setMessageType('error');\n                    setNotificationMessage(\n                        error.response.data.error\n                    );\n                    setTimeout(() => {\n                        setMessageType('');\n                        setNotificationMessage(null)\n                    }, 5000);\n                    console.log(error.response.data)\n                });\n        setNewName('');\n        setNewNumber('');\n    };\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={notificationMessage} messageType={messageType} />\n            <Filter searchValue={searchValue}\n                handleSearchValue={handleSearchValue} />\n            <h2>Add a new</h2>\n            <PersonForm handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n                newName={newName}\n                newNumber={newNumber}\n                addName={addName} />\n            <h2>Numbers</h2>\n            <Persons searchResults={searchResults}\n                handleDelete={handleDelete} />\n        </div>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}